version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: {{ project_name }}:latest
    container_name: {{ project_name }}
    volumes:
      - .:/app
      - ./logs:/app/logs
    ports:
      - "8000:8000"
    environment:
      - PYTHONPATH=/app
      - PYTHONUNBUFFERED=1
      - ENVIRONMENT=development
    command: uvicorn {{ project_name }}.main:app --host 0.0.0.0 --port 8000 --reload
    networks:
      - {{ project_name }}-network
    depends_on:
      - db
      - redis

  db:
    image: postgres:15-alpine
    container_name: {{ project_name }}-db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB={{ project_name }}
    ports:
      - "5432:5432"
    networks:
      - {{ project_name }}-network

  redis:
    image: redis:7-alpine
    container_name: {{ project_name }}-redis
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - {{ project_name }}-network

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: {{ project_name }}-pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@admin.com
      - PGADMIN_DEFAULT_PASSWORD=admin
    ports:
      - "5050:80"
    networks:
      - {{ project_name }}-network
    depends_on:
      - db

  prometheus:
    image: prom/prometheus:latest
    container_name: {{ project_name }}-prometheus
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - "9090:9090"
    networks:
      - {{ project_name }}-network

  grafana:
    image: grafana/grafana:latest
    container_name: {{ project_name }}-grafana
    volumes:
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    ports:
      - "3000:3000"
    networks:
      - {{ project_name }}-network
    depends_on:
      - prometheus

volumes:
  postgres_data:
  redis_data:
  prometheus_data:
  grafana_data:

networks:
  {{ project_name }}-network:
    driver: bridge 