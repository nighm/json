.PHONY: help install install-dev clean test lint format check coverage docs build publish

help:
	@echo "Available commands:"
	@echo "  make install      - Install production dependencies"
	@echo "  make install-dev  - Install development dependencies"
	@echo "  make clean        - Remove build artifacts and cache files"
	@echo "  make test         - Run tests"
	@echo "  make lint         - Run linters"
	@echo "  make format       - Format code"
	@echo "  make check        - Run all checks (lint, format, test)"
	@echo "  make coverage     - Run tests with coverage"
	@echo "  make docs         - Build documentation"
	@echo "  make build        - Build package"
	@echo "  make publish      - Publish package to PyPI"

install:
	python -m pip install -e .

install-dev:
	python -m pip install -e ".[dev]"
	pre-commit install

clean:
	rm -rf build/
	rm -rf dist/
	rm -rf *.egg-info
	rm -rf .coverage
	rm -rf htmlcov/
	rm -rf .pytest_cache/
	rm -rf .tox/
	rm -rf .nox/
	rm -rf .mypy_cache/
	rm -rf .hypothesis/
	find . -type d -name __pycache__ -exec rm -rf {} +
	find . -type f -name "*.pyc" -delete
	find . -type f -name "*.pyo" -delete
	find . -type f -name "*.pyd" -delete
	find . -type f -name ".coverage" -delete
	find . -type d -name "*.egg-info" -exec rm -rf {} +
	find . -type d -name "*.egg" -exec rm -rf {} +
	find . -type d -name ".pytest_cache" -exec rm -rf {} +
	find . -type d -name ".mypy_cache" -exec rm -rf {} +
	find . -type d -name ".hypothesis" -exec rm -rf {} +
	find . -type d -name "htmlcov" -exec rm -rf {} +
	find . -type d -name ".tox" -exec rm -rf {} +
	find . -type d -name ".nox" -exec rm -rf {} +
	find . -type d -name ".coverage" -exec rm -rf {} +

test:
	pytest

lint:
	flake8 {{ project_name }} tests
	mypy {{ project_name }} tests
	pylint {{ project_name }} tests
	bandit -r {{ project_name }}
	safety check

format:
	black {{ project_name }} tests
	isort {{ project_name }} tests

check: lint format test

coverage:
	pytest --cov={{ project_name }} --cov-report=term-missing --cov-report=html

docs:
	cd docs && make html

build:
	python -m build

publish:
	python -m twine upload dist/* 