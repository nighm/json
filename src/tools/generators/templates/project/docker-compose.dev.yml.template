version: '3.8'

services:
  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    image: {{ project_name }}-nginx:dev
    container_name: {{ project_name }}-nginx-dev
    volumes:
      - ./logs/nginx:/var/log/nginx
      - ./static:/app/static
      - ./media:/app/media
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "8080:80"
    environment:
      - TZ=Asia/Shanghai
    networks:
      - {{ project_name }}-network
    depends_on:
      - app
    restart: always

  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: {{ project_name }}:dev
    container_name: {{ project_name }}-app-dev
    volumes:
      - .:/app
      - ./logs:/app/logs
      - ./static:/app/static
      - ./media:/app/media
    ports:
      - "8000:8000"
    environment:
      - PYTHONPATH=/app
      - PYTHONUNBUFFERED=1
      - ENVIRONMENT=development
      - TZ=Asia/Shanghai
    command: uvicorn {{ project_name }}.main:app --host 0.0.0.0 --port 8000 --reload
    networks:
      - {{ project_name }}-network
    depends_on:
      - db
      - redis
    restart: always

  db:
    image: postgres:15-alpine
    container_name: {{ project_name }}-db-dev
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB={{ project_name }}
      - TZ=Asia/Shanghai
    ports:
      - "5432:5432"
    networks:
      - {{ project_name }}-network
    restart: always

  redis:
    image: redis:7-alpine
    container_name: {{ project_name }}-redis-dev
    volumes:
      - redis_data_dev:/data
    ports:
      - "6379:6379"
    networks:
      - {{ project_name }}-network
    restart: always

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: {{ project_name }}-pgadmin-dev
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@admin.com
      - PGADMIN_DEFAULT_PASSWORD=admin
      - TZ=Asia/Shanghai
    ports:
      - "5050:80"
    networks:
      - {{ project_name }}-network
    depends_on:
      - db
    restart: always

  prometheus:
    image: prom/prometheus:latest
    container_name: {{ project_name }}-prometheus-dev
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_data_dev:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - "9090:9090"
    networks:
      - {{ project_name }}-network
    restart: always

  grafana:
    image: grafana/grafana:latest
    container_name: {{ project_name }}-grafana-dev
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
      - grafana_data_dev:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
      - TZ=Asia/Shanghai
    ports:
      - "3000:3000"
    networks:
      - {{ project_name }}-network
    depends_on:
      - prometheus
    restart: always

  node-exporter:
    image: prom/node-exporter:latest
    container_name: {{ project_name }}-node-exporter-dev
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    ports:
      - "9100:9100"
    networks:
      - {{ project_name }}-network
    restart: always

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: {{ project_name }}-cadvisor-dev
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    ports:
      - "8080:8080"
    networks:
      - {{ project_name }}-network
    restart: always

volumes:
  postgres_data_dev:
  redis_data_dev:
  prometheus_data_dev:
  grafana_data_dev:

networks:
  {{ project_name }}-network:
    driver: bridge 